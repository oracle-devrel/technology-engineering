# queries/FORENSIC_CloudGuard.yaml
snapshot_type: cloudguard

queries:
  - description: "[FORENSIC] Get all the CG problems sorted by resource_name"
    sql: >
      SELECT resource_name, detector_rule_id, risk_level, labels, time_first_detected, time_last_detected, lifecycle_state, lifecycle_detail, detector_id 
      FROM {snapshot_data} 
      ORDER BY resource_name"

  - description: "[FORENSIC] Show all high-risk Cloud Guard problems"
    sql: >
      SELECT resource_name, detector_rule_id, risk_level, labels, time_first_detected, time_last_detected, lifecycle_state 
      FROM {snapshot_data} 
      WHERE risk_level = 'HIGH' 
      ORDER BY time_last_detected DESC
    
  - description: "[FORENSIC] Find problems by detector type"
    sql: >
      SELECT detector_id, COUNT(*) as problem_count 
      FROM {snapshot_data} 
      GROUP BY detector_id 
      ORDER BY problem_count DESC
    
  - description: "[FORENSIC] Show active problems (not resolved)"
    sql: >
      SELECT resource_name, detector_rule_id, risk_level, lifecycle_state, lifecycle_detail 
      FROM {snapshot_data} 
      WHERE lifecycle_state != 'RESOLVED' 
      ORDER BY time_last_detected DESC
    
  - description: "[FORENSIC] Find problems in specific compartments"
    sql: >
      SELECT  ic.name as compartment_name, ic.path as compartment_path, COUNT(*) as problem_count 
      FROM {snapshot_data} cp 
      LEFT JOIN identity_compartments ic 
      ON cp.compartment_id = ic.id 
      GROUP BY cp.compartment_id, ic.name, ic.path 
      ORDER BY problem_count DESC

