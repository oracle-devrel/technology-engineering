# This template will deploy a Helm Chart with the specified values

apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: argocd          # Name of the ApplicationSet
  namespace: argocd     # Better to have all ApplicationSet and Application under the same argocd namespace
spec:
  goTemplate: true
  goTemplateOptions: [ "missingkey=error" ]
  generators:
    - clusters:   # You can deploy the Helm chart on multiple clusters, selecting them by labels
        selector:
          matchLabels:
            cluster: in-cluster
  syncPolicy:
    preserveResourcesOnDeletion: true   # This is more of a safety mechanism that will preserve the Application if the ApplicationSet is deleted, see https://argo-cd.readthedocs.io/en/stable/operator-manual/applicationset/Application-Deletion/
  template:
    metadata:
      name: 'argocd-{{ "{{" }}.name{{ "}}" }}'        # Include this metadata if you want your ApplicationSet to have a different name than the metadata.name
    spec:
      project: {{ .Values.project }}    # The default project is always present. You might have to create multiple projects in you have multiple teams working in the same repository
      sources:
        - repoURL: https://argoproj.github.io/argo-helm     # This is the repository where to pull the Helm chart. It is possible to configure even an OCI compliant repository, such as the Oracle Container Registry
          chart: argo-cd            # Name of the Chart to pull
          targetRevision: 8.0.17     # Better always to specify the version of the Chart to deploy
          helm:
            releaseName: "argocd"   # Helm release name for the Chart
            valueFiles:
              - $values/apps/{{ "{{" }}.name{{ "}}" }}/argocd/argocd/values.yml     # Location of the value file: apps/<cluster-name>/<namespace>/<app-name>/values.ym
              # NOTE: If you are copy-pasting this template, BE SURE to change the namespace and app name and that all the folders and files are in place

        - repoURL: {{ .Values.repo }}     # Just a reference to the remote Git, do not modify it
          targetRevision: HEAD
          ref: values
      destination:
        server: '{{ "{{" }}.server{{ "}}" }}'     # Server parameter is provided by the cluster generator
        namespace: argocd                         # Namespace where to deploy the application (TO BE CHANGED in case you are copy-pasting this template)
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          prune: true                             # If set to true, will automatically delete resources if they are not present in the Git repository
          selfHeal: true                          # If set to true, will automatically revert any manual update done to resources generated by the Application